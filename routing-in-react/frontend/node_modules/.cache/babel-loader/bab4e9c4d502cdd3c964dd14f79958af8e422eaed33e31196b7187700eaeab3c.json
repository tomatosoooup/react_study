{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react_study\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// did it\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// did it\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventsDetailPage from \"./pages/EventsDetailPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootLayout from \"./pages/Root\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: \"/events/:event_id\",\n    element: /*#__PURE__*/_jsxDEV(EventsDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }, this)\n  }, {\n    path: \"/events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this)\n  }, {\n    path: \"/events/:event_id/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 50\n    }, this)\n  }]\n}]);\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Home","Events","EventsDetailPage","NewEvent","EditEventPage","RootLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react_study/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// did it\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// did it\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventsDetailPage from \"./pages/EventsDetailPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootLayout from \"./pages/Root\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      { path: \"/\", element: <Home /> },\n      { path: \"/events\", element: <Events /> },\n      { path: \"/events/:event_id\", element: <EventsDetailPage /> },\n      { path: \"/events/new\", element: <NewEvent /> },\n      { path: \"/events/:event_id/edit\", element: <EditEventPage /> },\n    ],\n  },\n]);\n\nconst App = () => {\n  return (\n    <>\n      <RouterProvider router={router}></RouterProvider>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEL,OAAA,CAACF,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEL,OAAA,CAACP,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAChC;IAAEL,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEL,OAAA,CAACN,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACxC;IAAEL,IAAI,EAAE,mBAAmB;IAAEC,OAAO,eAAEL,OAAA,CAACL,gBAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC5D;IAAEL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEL,OAAA,CAACJ,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC9C;IAAEL,IAAI,EAAE,wBAAwB;IAAEC,OAAO,eAAEL,OAAA,CAACH,aAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAElE,CAAC,CACF,CAAC;AAEF,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEX,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACT,cAAc;MAACY,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB;EAAC,gBACjD,CAAC;AAEP,CAAC;AAACG,EAAA,GANID,GAAG;AAQT,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}