{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react_study\\\\react-ts-todo\\\\src\\\\components\\\\Todos.tsx\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport classes from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todos = props => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes.todos,\n    children: props.items.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      text: item.text,\n      onDelete: props.onDelete\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","TodoItem","classes","Todos","props","todos","items","map","item","text","onDelete","id"],"sources":["C:/Users/User/Desktop/react_study/react-ts-todo/src/components/Todos.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Todo from \"../models/todo\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nimport classes from \"./Todos.module.css\";\r\n\r\nconst Todos: React.FC<{\r\n  items: Todo[];\r\n  onDelete: () => void;\r\n}> = (props) => {\r\n  return (\r\n    <ul className={classes.todos}>\r\n      {props.items.map((item) => (\r\n        <TodoItem key={item.id} text={item.text} onDelete={props.onDelete} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAGJ,GAAIC,KAAD,IAAW;EACd,oBACE;IAAI,SAAS,EAAEF,OAAO,CAACG,KAAvB;IAAA,UACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf,QAAC,QAAD;MAAwB,IAAI,EAAEA,IAAI,CAACC,IAAnC;MAAyC,QAAQ,EAAEL,KAAK,CAACM;IAAzD,GAAeF,IAAI,CAACG,EAApB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAXD;;KAAMR,K;AAaN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}