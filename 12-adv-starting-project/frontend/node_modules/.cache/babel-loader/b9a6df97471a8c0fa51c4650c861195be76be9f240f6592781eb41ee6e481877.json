{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react_study\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventsDetailPage;\nexport default EventsDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.event_id;\n  const responce = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!responce.ok) {\n    throw json({\n      message: \"No such event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return responce;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventsDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","event_id","responce","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react_study/12-adv-starting-project/frontend/src/pages/EventsDetailPage.js"],"sourcesContent":["import { useRouteLoaderData, json } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventsDetailPage() {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  return <EventItem event={data.event} />;\r\n}\r\n\r\nexport default EventsDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.event_id;\r\n  const responce = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!responce.ok) {\r\n    throw json({ message: \"No such event\" }, { status: 500 });\r\n  } else {\r\n    return responce;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACN,EAAA,CAJQD,gBAAgB;EAAA,QACVL,kBAAkB;AAAA;AAAAa,EAAA,GADxBR,gBAAgB;AAMzB,eAAeA,gBAAgB;AAE/B,OAAO,eAAeS,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAAgB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3D,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}