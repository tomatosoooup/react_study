{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react_study\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// did it\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// did it\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// did it\n// 4. Add properly working links to the MainNavigation\n// did it\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// yeap\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// done\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsDetailPage, { loader as eventsDetailLoader } from \"./pages/EventsDetailPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":event_id\",\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 26\n        }, this),\n        loader: eventsDetailLoader\n      }, {\n        path: \":event_id/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 50\n        }, this)\n      }]\n    }, {\n      path: \":event_id\",\n      element: /*#__PURE__*/_jsxDEV(EventsDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this),\n      loader: eventsDetailLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 35\n      }, this)\n    }]\n  }]\n}]);\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Home","EventsPage","loader","eventsLoader","EventsDetailPage","eventsDetailLoader","NewEvent","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react_study/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// did it\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// did it\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// did it\n// 4. Add properly working links to the MainNavigation\n// did it\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// yeap\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// done\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsDetailPage, {\n  loader as eventsDetailLoader,\n} from \"./pages/EventsDetailPage\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/ErrorPage\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <Home /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":event_id\",\n            children: [\n              {\n                index: true,\n                element: <EventsDetailPage />,\n                loader: eventsDetailLoader,\n              },\n              { path: \":event_id/edit\", element: <EditEventPage /> },\n            ],\n          },\n          {\n            path: \":event_id\",\n            element: <EventsDetailPage />,\n            loader: eventsDetailLoader,\n          },\n          { path: \"new\", element: <NewEvent /> },\n        ],\n      },\n    ],\n  },\n]);\n\nconst App = () => {\n  return (\n    <>\n      <RouterProvider router={router}></RouterProvider>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}